#!/usr/bin/env perl  
  
use strict;  
use warnings FATAL => 'all';  
  
use Getopt::Long;  
  
my (  
    $command,  $ssh_user,        $orig_master_host, $orig_master_ssh_port,$orig_master_ip,  
    $orig_master_port, $new_master_host, $new_master_ip,    $new_master_port  
);  
  
my $vip = '10.32.108.202/24';  
my $key = '3';
my $gateway = `echo $vip | /bin/awk -F '.' '{printf \$1"."\$2"."\$3".1"}'`;
my $vip_new=`echo $vip | /bin/awk -F '/' '{printf \$1}'`;
my $ssh_start_vip = "/sbin/ifconfig bond0:$key $vip";  
my $ssh_stop_vip = "/sbin/ifconfig bond0:$key down";  
my $arping = "/sbin/arping $gateway -s $vip_new -c 5 -I bond0";
  
GetOptions(  
    'command=s'          => \$command,  
    'ssh_user=s'         => \$ssh_user,  
    'orig_master_host=s' => \$orig_master_host,  
    'orig_master_ssh_port=s'   => \$orig_master_ssh_port,
    'orig_master_ip=s'   => \$orig_master_ip,  
    'orig_master_port=i' => \$orig_master_port,  
    'new_master_host=s'  => \$new_master_host,  
    'new_master_ip=s'    => \$new_master_ip,  
    'new_master_port=i'  => \$new_master_port,  
);  
  
exit &main();  
  
sub main {  
  
    print "\n\nIN SCRIPT TEST====$ssh_stop_vip==$ssh_start_vip===\n\n";  
  
    if ( $command eq "stop" || $command eq "stopssh" ) {  
  
        my $exit_code = 1;  
        eval {  
            print "Disabling the VIP on old master: $orig_master_host \n";  
            &stop_vip();  
            $exit_code = 0;  
        };  
        if ($@) {  
            warn "Got Error: $@\n";  
            exit $exit_code;  
        }  
        exit $exit_code;  
    }  
    elsif ( $command eq "start" ) {  
  
        my $exit_code = 10;  
        eval {  
            print "Enabling the VIP - $vip on the new master - $new_master_host \n";  
            &start_vip();  
            $exit_code = 0;  
        };  
        if ($@) {  
            warn $@;  
            exit $exit_code;  
        }  
        exit $exit_code;  
    }  
    elsif ( $command eq "status" ) {  
        print "Checking the Status of the script.. OK \n";  
        exit 0;  
    }  
    else {  
        &usage();  
        exit 1;  
    }  
}  
  
sub start_vip() {  
    print "star_new_vip";
    `ssh -p$orig_master_ssh_port $ssh_user\@$new_master_host \" $ssh_start_vip \"`;  
    print($arping);
    `ssh -p$orig_master_ssh_port $ssh_user\@$new_master_host \" $arping \"`;  
}  
sub stop_vip() {  
     return 0  unless  ($ssh_user);  
    `ssh -p$orig_master_ssh_port $ssh_user\@$orig_master_host \" $ssh_stop_vip \"`;  
}  

sub usage {  
    print  
    "Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ssh_port --orig_master_ip=ip   
            --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n";  
}  
